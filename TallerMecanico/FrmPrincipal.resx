<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAeAB4AAD/4QAiRXhpZgAATU0AKgAAAAgAAQESAAMAAAABAAEAAAAAAAD/2wBD
        AAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0M
        DgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAz/wAARCAC2ALYDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQF
        BgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAk
        M2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWG
        h4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx
        8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQA
        AQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5
        OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmq
        srO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9
        /KjqSox1oAKKewwKZQAUU5eTTsUAR0VJijFAEdSUYoxQBHRUlFAEdSUUUAFR1JRQBHRUlFABRRRQBHUl
        FFABRXjP7V/iT4xeDfD+lal8H/Cfhrx9qn2l7bUNE1rVxo0Jhddy3S3PkyfNEYxH5Wz5/tLHcvlYYoA9
        moPSig9KAGFs0lFKoyaAEBxTlbJpdgpQuKACiihjgUAFFRuzFfl602WYxgZbHvgAD8zQBMxwKarZNUrj
        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
        RQAUUUUAf//Z
</value>
  </data>
</root>